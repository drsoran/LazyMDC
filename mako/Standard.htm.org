<%
# Header 20
# Table Head 20
# Table Row 21
# Section Spacing 10

import math

table_head = 21
table_row_height = 21.5

def ntos(n):
  # Get number of DPs
  try:
    dp = len(str(n).split('.')[1])
  except:
    dp = 0
  return '{:,.{prec}f}'.format(float(n), prec=dp)

def get(lst, idx, default=None):
  try:
    return lst[idx]
  except (IndexError, KeyError):
    return default

def ll(info, lat=True):

  if not info:
    return ""

  prefix = 'lat' if lat else 'lon'

  try:
    pos = float(info[prefix])
  except Exception as e:
    return info 

  if lat:
      axis = "N" if pos > 0 else "S"
      pad = 2
  else:
      axis = "E" if pos > 0 else "W"
      pad = 3

  # Get Coordinate Format
  coord = info.get(f"{prefix}_fmt", data['flight']['flight-coord'])
  decimals = int(info.get(f"{prefix}_dmp", data['flight']["flight-coord-decimals"]))

  dec_width = 2 + decimals
  if (decimals):
      dec_width += 1

  if coord == 'dd':
    return "{0:.{prec}f}".format(pos, prec=decimals)

  work = abs(pos)
  deg = math.floor(work)

  work -= deg
  work *= 60

  if coord == "ddm":
    return "{} {:0{dpad}d}&deg; {:0{swidth}.{precision}f}'".format(
        axis,
        deg,
        work,
        dpad=pad,
        swidth=dec_width,
        precision=decimals,
    )

  min = math.floor(work)
  work -= min
  work *= 60

  sec = round(work, decimals)

  if sec == 60:
    sec = 0
    min += 1

  if min == 60:
    min = 0
    deg += 1

  return "{} {:0{dpad}d}&deg; {:02d}' {:0{swidth}.{precision}f}\"".format(
      axis,
      deg,
      min,
      sec,
      swidth=dec_width,
      dpad=pad,
      precision=decimals,
  )

def alt_formatter(alt):
  alt = int(alt)
  if alt > int(data['waypoint']['transition-alt']):
    return 'FL%s' % int(alt/100)
  return str(int(alt))

def lat_formatter(info):
  return ll(info, True)

def lon_formatter(info):
  return ll(info, False)

data = context['data']
package = data['package']['package-member'] != 'package-false'
ac = data['flight']['flight-airframe']

y_remain = 1180 - 20

# Flight Members is variable columns...which sucks to map between, so we have:
# [Title, Col Width, Style]

flight_cols = [
  ["#", 30, "algnc"],
  ["PILOT", 240, "lpad5"],
]

if ac == "F-14B":
  flight_cols[1][1] /= 2;
  flight_cols.append(
    ['RIO', 120, "lpad5"])

if ac in ["F-14B", "FA-18C"]:
  flight_cols.append(['BORT', 40, "algnc"])

if ac == "A-10C":
  flight_cols.extend([
    ['GID', 40, "algnc"],
    ['OID', 40, "algnc"]])

flight_cols.extend([
  ['TCN', 40, "algnc"],
  ['LSR', 40, "algnc"],
  ['SQUAWK', 50, "algnc"],
  ['NOTES', 0, "lpad5"]])

%><!DOCTYPE html>
<head>
  <title>${data['mission']['mission-id']} - p1</title>
  <link rel="stylesheet" type="text/css" href="css/fonts.css">
  <link rel="stylesheet" type="text/css" href="css/kneeboard-base.css">
  <link rel="stylesheet" type="text/css" href="css/kneeboard-light.css">
  % if output.startswith("pdf"):
  <link rel="stylesheet" type="text/css" href="css/kneeboard-pdf.css">
  % endif
</head>
<body style="">

  % if output in ['png', 'pngr', 'raw']:
  <div class="kneeboard kneeboard-fixed">
  % else:
  <div class="kneeboard">
  % endif

  ## ##########################################################################
  ## HEADING TABLE
  ## ##########################################################################
  <table class="kb-width" style="table-layout: fixed">

    <colgroup>
      <col style="width: 115px" />
      <col style="width: 70px" />
      <col style="width: 70px" />
      % if package:
      <col style="width: 60px" />
      % endif
      <col />
      <col style="width: 60px" />
    </colgroup>

    <tbody>

      <tr>
        <th>CALLSIGN</th>
        <th>PRI</th>
        <th>SEC</th>

        % if package:
        <th>PACKAGE</th>
        % endif
        <th>MISSION</th>
        <th>ID</th>
      </tr>
      
      <tr>
        <td class="algnc">${data['mission']['mission-callsign']}</td>
        <td class="freq">${data['mission']['mission-pri-freq']}</td>
        <td class="freq">${data['mission']['mission-sec-freq']}</td>
        % if package:
        <td class="algnc">${data['package']['package-name']}</td>
        % endif
        <td class="lpad5">${data["mission"]['mission-desc']}</td>
        <td class="algnc">${data["mission"]['mission-id']}</td>
      </tr>
    </tbody>
  </table>

  <% y_remain -= table_head + table_row_height %>

  <% y_remain -= 10 %>
  <div class="break"></div>


  ## ##########################################################################
  ## FLIGHT TABLE
  ## ##########################################################################
  <table class="kb-width" style="table-layout: fixed">

    <colgroup>
      <col class="rb2" style="width: 15px;" />
      % for col in flight_cols:
      <col ${ 'style="width: %spx"' % col[1] if col[1] else '' } />
      % endfor
    </colgroup>

    <tbody>

      <tr>
        <th></th>
        % for col in flight_cols:
        <th>${ col[0] }</th>
        % endfor
      </tr>

      % for n in range(4):
      <tr>
        % if n == 0:
        <th rowspan=4 class="block-title"><div style="width: 15px"><div class="arotate90">FLIGHT</div></div></th>
        % endif

        <% elem = get(data['flight']['members'], n) %>
        % for col in flight_cols:
        <td ${ 'class="%s"' % col[2] if (col[2] != "") else "" }>${elem[col[0].lower() if col[0] != "#" else "id"] if elem else "&nbsp;" }</td>
        % endfor 

      </tr>
      % endfor
    </tbody>
  </table>

  <% y_remain -= 10 %>
  <div class="break"></div>

  <% y_remain -= table_head + table_row_height*4 + 10 %>

  ## ##########################################################################
  ## DEP / ARR
  ## ##########################################################################

  <table class="kb-width" style="table-layout: fixed">

    <colgroup>
      <col class="rb2" class="rb2" style="width: 15px" />
      <col style="width: 30px" />
      <col style="width: 200px" />
      <col style="width: 50px" />
      <col style="width: 60px" />
      <col style="width: 60px" />
      <col style="width: 45px" />
      <col style="width: 60px" />
      <col style="width: 60px" />
      <col style="width: 80px" />
      <col style="width:62px" />
      <col style="width:45px" />
      <col style="width:62px" />
      <col style="width:45px" />
      <col style="width:62px" />
      <col style="width:45px" />
      <col style="width:62px" />
      <col style="width:45px" />
    </colgroup>

    <tbody>

      <tr class="nodrag header">
        <th></th>
        <th></th>
        <th>AIRBASE</th>
        <th>ICAO</th>
        <th>TCN</th>
        <th>PAR</th>
        <th>ELEV</th>
        <th>RWY</th>
        <th>ILS</th>
        <th>VFR</th>
        <th>ATIS</th>
        <th>#</th>
        <th>GND</th>
        <th>#</th>
        <th>TWR</th>
        <th>#</th>
        <th>CTRL</th>
        <th>#</th>
      </tr>
      
      % for a in ['dep', 'arr', 'alt']:
      <%
        elem = data['deparr'][a]
        if get(elem, 'usedep', False):
          tmp = dict(data['deparr']['dep'])
          tmp.update(elem)
          elem = tmp
      %>
      <tr>
        % if loop.index == 0:
        <th rowspan=3 class="block-title"><div style="width: 15px"><div class="arotate90">DEP/ARR</div></div></th>
        % endif
        <td class="algnc">${a.upper()}</td>
        <td class="lpad5">${get(elem, 'location')}</td>
        <td class="algnc">${get(elem, 'icao')}</td>
        <td class="freq">${get(elem, 'tcn')}</td>
        <td class="freq">${get(elem, 'par', '')}</td>
        <td class="algnr rpad5">${get(elem, 'alt', 0)}</td>
        <td class="algnc">${get(elem, 'runway', '-')}</td>

        <%
          ils = get(elem, 'ils', '')
          ils = "" if ils == '----' else ils
        %>
        <td class="freq">${ils}</td>
        <td class="lpad5">${get(elem, 'vfr', '-')}</td>
        <td class="lpad5">${get(elem, 'notes', '')}</td>
      </tr>
      % endfor
    </tbody>
  </table>
  <% y_remain -= table_head + table_row_height*3 %>

  <% y_remain -= 10 %>
  <div class="break"></div>

  ## ##########################################################################
  ## DEP / ARR ATC
  ## ##########################################################################
  <%
    # Prepare our ATC output here, available agencies would be: # atis, gnd,
    # twr, ctrl - there are normally a max of 4 per thing so its split into
    # 1 column per AF, but if usedep then we dont need to incl

    cols = []

    # Prioritise based on 
    for col, deparr in enumerate(['dep', 'arr', 'alt']):
      dt = []

      if get(data['deparr'][deparr], 'usedep', False):
        continue

      for agency in ['atis', 'gnd', 'twr', 'ctrl']:
        try:
          loc = data['deparr'][deparr]['location']
          freq = data['deparr'][deparr][agency]
          pst = data['deparr'][deparr][agency + "-pst"]
        except:
          continue

        if freq == "":
          continue

        dt.append([loc + " " + agency.upper(), freq, pst])
      
      if len(dt):
        cols.append(dt)

    rows = max([len(x) for x in cols])

    y_remain -= rows*table_row_height + table_head

  %>

  <table class="kb-width" style="table-layout: fixed">
    <colgroup>
      <col class="rb2" style="width:15px;" />
      <col style="width:62px" />
      <col style="width:45px" />
      <col class="rb2" />
      <col style="width:62px" />
      <col style="width:45px" />
      <col class="rb2" />
      <col style="width:62px" />
      <col style="width:45px" />
      <col class="rb2" />
    </colgroup>

    <tbody>
      <tr>
        <th></th>
        <th>FREQ</th>
        <th>#</th>
        <th>AGENCY</th>
        <th>FREQ</th>
        <th>#</th>
        <th>AGENCY</th>
        <th>FREQ</th>
        <th>#</th>
        <th>AGENCY</th>
      </tr>

      % for x in range(rows):
      <tr>
          % if loop.index == 0:
          <th rowspan=${rows}  class="block-title"><div style="width: 15px"><div class="arotate90">ATC INFO</div></div></th>
          % endif

          % for col in range(3):
            <% elem = get(get(cols, col, []), x, []) %>
            <td class="freq">${get(elem, 1, '')}</td>
            <td class="algnc">${get(elem, 2, '')}</td>
            <td>${get(elem, 0, '&nbsp;')}</td>
          % endfor
      </tr>
      % endfor

    </tbody>
  </table>

  <% y_remain -= 10 %>
  <div class="break"></div>

  ## ##########################################################################
  ## LOADOUT
  ## ##########################################################################

  <table class="kb-width" style="table-layout: fixed">
    <colgroup>
      <col class="rb2" style="width: 15px;" />
      <col style="width:60px" />
      <col style="width:60px" />
      <col style="width:60px" />
      <col style="width:60px" />
      <col style="width:60px" />
      <col style="width:60px" />
      <col style="width:35px" />
      <col />
      <col style="width:60px" />
    </colgroup>

    <tbody>
      <tr>
        <th></th>
        <th>FLARE</th>
        <th>CHAFF</th>
        <th>GUN</th>
        <th>FUEL</th>
        <th>JOKER</th>
        <th>BINGO</th>
        <th>STN</th>
        <th>WEAPON</th>
        <th>WEIGHT</th>
      </tr>

      <%
        count = len(data['loadout']['pylons'])
        y_remain -= table_head + count * table_row_height
      %>

      % for elem in data['loadout']['pylons']:
      <tr>
        % if loop.index == 0:
          <th rowspan=${count} class="block-title"><div style="width: 15px"><div class="arotate90">PAYLOAD / CMS</div></div></th>

          <td class="algnc">${data['loadout']['flare']}</td>
          <td class="algnc">${data['loadout']['chaff']}</td>
          <td class="algnc">${data['loadout']['gun']}%</td>
          <td class="algnc">${data['loadout']['fuel']}%</td>
          <td class="algnc">${data['loadout']['joker']}</td>
          <td class="algnc">${data['loadout']['bingo']}</td>
        % endif
        % if loop.index == 1:
          <td rowspan=${count-1} colspan=6 class="algnc"><img alt="${ac}" width=320 src="http://anyanka.hatchlane.com/mc/kneeboard/img/${ac}-light.png"></td>
        % endif
        <td class="algnc">${elem['pyl']}</td>
        <td>${elem['store']}</td>
        <td class="algnr rpad5">${elem['weight']|ntos}</td>
      </tr>
      % endfor

    </tbody>
  </table>
  
  <% y_remain -= 10 %>
  <div class="break"></div>

  ## ##########################################################################
  ## BULLS / RAMROD
  ## ##########################################################################

  <div style="overflow: auto">
    <div style="float: left; width: 49%;">
      <table style="width: 100%; table-layout: fixed">
        <colgroup>
          <col  />
          <col style="width:145px"/>
          <col style="width:145px"/>
        </colgroup>

        <tbody>
          <tr>
            <th colspan=3>BULLSEYE</th>
          </tr>

          <tr>
            <td class="lpad5">${data['waypoint']['bullseye']['name']}</td>
            <td class="freq">${data['waypoint']['bullseye']|lat_formatter,n}</td>
            <td class="freq">${data['waypoint']['bullseye']|lon_formatter,n}</td>
          </tr>
        </tbody>
      </table>
    </div>

    <div style="float: left; width: 2%">&nbsp;</div>

    <div style="float: left; width: 49%;">
      <table style="width:100%; table-layout: fixed">
        <colgroup>
          <col />
          <col />
          <col />
          <col />
          <col />
          <col />
          <col />
          <col />
          <col />
          <col />
        </colgroup>

        <tbody>
          <tr>
            <th colspan=10>RAMROD</th>
          </tr>

          <tr>
            % for elem in data['comms']['ramrod']:
            <td class="freq">${elem}</td>
            % endfor
          </tr>
        </tbody>
      </table>
    </div>
  </div>

  <% y_remain -= 10 %>
  <div class="break"></div>

  ## ##########################################################################
  ## WAYPOINTS
  ## ##########################################################################

  <% y_remain -= table_head %>
  <table class="kb-width" style="table-layout: fixed">
    <colgroup>
      <col class="rb2" style="width: 15px;" />
      <col style="width:30px" />
      <col />
      <col style="width:45px" />
      <col style="width:45px" />
      <col style="width:45px" />
      <col style="width:45px" />
      <col style="width:120px" />
      <col style="width:120px" />
      <col style="width:50px" />
      <col style="width:50px" />
    </colgroup>
    <tbody>
      <tr>
        <th></th>
        <th>ID</th>
        <th>NAME</th>
        <th>ALT</th>
        <th>GS</th>
        <th>TOT</th>
        <th>ACT</th>
        <th>LAT</th>
        <th>LON</th>
        <th>DIST</th>
        <th>TBRG</th>
      </tr>

      <%
      if ac == "F-14B":
        poi_count = 0
        wp_rows = math.floor((y_remain - 10 - (table_head + table_row_height * poi_count)) / table_row_height)
      if ac == "F-16C":
        wp_rows = math.floor((y_remain - 10 - (table_head + 4 * table_row_height)) / table_row_height)

      %>

      % for n in range(wp_rows):
      <tr>
        % if loop.index == 0:
        <th rowspan=${wp_rows} class="block-title"><div style="width: 15px"><div class="arotate90">WAYPOINTS</div></div></th>
        % endif

        <% elem = get(data['waypoint']['waypoints'], n, {}) %>
        % if elem.get('lat', '') == '' or elem.get('lon') == '':
        <td>&nbsp;</td><td></td> <td></td> <td></td> <td></td> <td></td> <td></td> <td></td> <td></td> <td></td>
        % else:
        <td class="algnc">${get(elem, 'typ')}</td>
        <td>${get(elem, 'name')}</td>
        <td class="algnr">${get(elem, 'alt', '')|alt_formatter}</td>
        <td class="algnc">${get(elem, 'gs', '')}</td>
        <td class="algnc">${get(elem, 'tot', '')}</td>
        <td class="algnc">${elem['act'] if elem['act'] != '00:00' else ''}</td>
        <td class="freq">${elem|lat_formatter,n}</td>
        <td class="freq">${elem|lon_formatter,n}</td>
        <td class="algnr rpad5">${get(elem, 'dist', '')}</td>
        <td class="algnr rpad5">${get(elem, 'tbrg', '')}</td>
        % endif
      </tr>
      % endfor

    </tbody>
  </table>
